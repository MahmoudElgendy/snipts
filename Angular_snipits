angular js => web framework(lemetited to code) mvc.
andgular => platform(related to all software life cycle) component.

Anatomy:-
 Modules
 Component
 Directives
 Services
 Pipes
 Routing
 
 Modules => group set of elements in application in one single unit  
            application may have more than one module but at least one(represent the initial component of the app)
            aclass with ngModule dicorator
 component => a class with @Componet   directive
              peace of ui with data and logic
              Eent Bindings - property bindigs
              
 Directives => away to transform elements of Html 
              component ->
              structural -> alter the dom (ng if , ing for)
              attribute-> cnange appearance of behavior of  existing elements
              
Pieps => transform data frm one form to antother      

Services => to share data and logic not only related to  specifically component.

routing=> for navigation
 
horizontal scaling=> add more servers to process information.
vertical scale improve the characteristics of existing servers.(add more ram) 
 
 installation steps
1-  while installing node download the recommending version (last stable vertion)
2- install angular  npm i -g @angular/cli
3- if you want to upgrad your .ne go for dot net and download SDk(not runtime) then run it
for vs code (some extenions)=> Angular Language,c#
dotnet tool install --global dotnet-ef => helps you to use entityframework form command line
better to have both frontend and back separated so you  can deploy them separatly.

node_modules => the folder contains all applications

ctr+ , => opens the settings then type exclude to exclude any type of files you need
------------------------------------------------------------------------------------------------------------

How angular bootstrapped an application?

1- Angular.json=>important info about environment and settings and lunching and bootstrapping
2- in this file udner bulid seciton there are main which determine the starup file (main.ts)
3- main.ts inside platformBrowserDynamic.bootstrapModule(... there are the main modlule to start....)
4- inside the defalut app(AppModule) inside NgModule directive >bootstrap >the name of first componet to run.
5- inside this component use the selector to use it in the index page the single page of the application

for pieps u can chain more than one 

  title = this._title.setTitle( 'angular-movies | ');
  
  oninit() code inside it execute right after instantiate the component
  
 -- passing data from parent to child (make your component reusable)
  suppose u need to display 2 lists of movies one for curren and second for upcomming
  put data in parent component and pass diffrent list for each child
  
  <app-movies-list [movies]="upcommingMovies"></app-movies-list>
  <h4>upcomming</h4>
  <app-movies-list [movies]="movies"></app-movies-list>
  
  passing parameters to parent (react to the user input)
  
ng group => used to group a set of element.
we cann't use ngif and ngfor in same div tag because we cant but 2 structural directives in same tag
so you shoul to nest for inside if but u have to reaplace rapper div with ng-container to keep style
- can you declare variable inside html not ts??
-- yes by useing Template variable or decorator (will be discussed later)
- how?
--set #variable name in any input dom element to make it template variable u can then use it.
can we pass html content as a paramenter (not value all component)?
yes by useing content projection

ng-content && ng-container
angular material => library contains many componets
to install it  ng add @angualr/material
notice that :-
angular material is huge library u may not use all so
u can generate module for it here u add all angular material modules u need then import this module into ur app module
ngclass help me to add css dynamically
lifecycle of a component => the different stages componet goes through we can execute functions in each of thes stages (hocks)
onInit()
onChanges()=> fires when parameters of  the componet are updated from the outside(some times may fire before onInit())
onDestrou()=>just before componet is destroyed good for cleaning resources
DoCheck()=>each time the change detectore gets executed by angular
afterVeiwInit()=>when content of component had been rendered(subscrip to chages to property decorated with viewchild decorator
afterViewChecked
afterContentInit
aftercontentChecked
-------
global styling:-
applyed for all components (style.css)

event Binding => (click)="remove(index)
property Binding => [movies]="currentMovies"

any change in the module need rerun.
to swich between ts - html - css install (angular2 swicher extention)
Alt+o => html
Alt+i => css
Alt+u=>ts
Alt+p=>spec
there are 9 mouse events
Click dblclick Mouseover Mouseenter Mouseleave Mousedown Mouseup Drag Dragover
ngfor how to iterate fixed number of times?
in your ts file declare array with the number u need then use it
this.maxRatingArr = Array(5);
output (coustom events) send data from child to parent
some times when using the class EventEmitter you get this error ( event emitter is not generic)
solution: make sue you import it form the right package @angular/core

// declaring like transporter to hold the data you want to move
----in child component
@Output()
OnRating:EventEmitter<number> = new EventEmitter<number>();
  
// that means you want to send this value to the parent in cas of rating event happend
 this.OnRating.emit(this.selectedRate);
 Not you never touch the child html file all in ts
---- end of child component

---- in parent compont
<app-rating (OnRating)="handlRating($event)"></app-rating> // html file
while on Rating represents the outpout property in the child component
and handleRating the function in the parnt componnt wich will recive the transmitted data 
----- end of parnt component

remember constructor is just for injection services it is not inside lifecycle hocs at all 
if you want to iniat any values do it inside oninit()
---------------------------------------------------------------------------------------------------------------------
routing:-
1- routing roles - and links
2-allow navigation from js code
3- route parameters
4- wild card to catch non exising routs

configuring routing is very similar to configuer material
if you dont make it while creating the project:
1- crete module with name app-routing
2- import required packages 
import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
3-for ngModule configurations set the following
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
  while wouts is a list of type Routes
  4-const routes: Routes = [
  
];

5- inside routes write your route roles Like
  {path:'routingsegment', component: componentName}
  router-outlet => the place holder where route component will be displayed
  hint:- if i have more than on rout-outlet in the whole renderd screen where the routing component will be displayed
  in the fist occure component

put in appcomponent each comonent or html you want it to appear allover your applicaton and add router-outlet to contain routing components

routerLink="routingsegment" => add it to any compont to naviate to the given routcomponnt

--how to navigate to rout throught code

inject Router in the component u want to make navigation
this._router.navigate(['/routingsegment']);

to read data from rout 
inject activatedRoute in the component that will receive the value

this.activatedRouter.params.subscribe(params=>{
params.id
})

use wild card to handl all kind of unavailble routs but you have to put it at the end so while all route rule not match then find it
{path:'**', component: defaultComponent}


Template-Driven Vs Ractive Forms
Template-Driven => configurations mainly in html (component template)
more powerful so you can make custom condition validaations or validations based on specific condition (also it let html clean)
reactive forms => configuratins mainly in ts (component class)

formGroup=> bind to the form in the ts
formControlName =>bind to each property

foreach flaidation rule u add you have to handle it
you can create generic form for create and update that validate and display properities and have event immetter for the logic
and use it inside create and update where u only do the logic (save changes())
this.form.valuechanges.subscribe()=> helps you to react with any changes in the form
[disable]="form.invalid"=>  

another way to install needed packages
type it in package.json then run npm i

<<< steps to create project >>>
1- create project
2-install material , leaflet
--create material module
-- make it import
4- prepare module class
3- create static components
4- create routing

-----------------------------------------------------
general skills you need with angular
1- install 3rd part libreries lik material - bootstrap - toaster
